{"version":3,"sources":["actions.js","constants.js","components/Search.js","components/LikeItem.js","components/LikeList.js","components/Header.js","components/PageButton.js","components/ResultsPages.js","components/Result.js","components/ResultsList.js","components/Results.js","components/Recipe.js","components/ShoppingItems.js","components/Shopping.js","components/CopyRight.js","containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["setRecipeInfo","info","type","payload","id","title","author","img","url","ingredients","time","servings","setLikedRecipe","recipe","connect","state","searchField","searchRecipes","setSearchField","text","requestResult","query","dispatch","a","async","axios","get","res","data","recipes","props","className","onSubmit","event","preventDefault","placeholder","value","onChange","target","href","LikeItem","item","onClick","likeItemOnClick","src","alt","likedRecipe","isLike","map","key","Header","PageButton","page","onPageClick","data-goto","ResultsPages","numResult","resPerPage","pages","Math","ceil","limitRecipeTitle","limit","newTitle","length","split","reduce","acc","cur","push","join","Result","result","recipe_id","recipeOnClick","image_url","publisher","ResultsList","start","end","searchResult","slice","Results","setState","currentPage","parseInt","closest","dataset","goto","this","results","isPending","Component","error","Recipe","recipeButtonClick","matches","updateServings","newServing","newIngredients","ingredient","count","createIngredient","formatCount","unit","newCount","round","toString","el","int","fr","Fraction","numerator","denominator","likeButton","liked","addToListButton","rel","requestRecipe","ShoppingItems","countUpdate","deleteIng","delete","data-item-id","step","shoppingList","CopyRight","App","calcTime","numIng","parseIngredients","unitsLong","unitsShort","units","toLowerCase","forEach","i","replace","objIng","arrIng","unitIndex","findIndex","el2","includes","Function","uniqid","getAttribute","highlightSelected","source_url","list","Set","idx","currentLiked","condition","splice","Array","from","document","querySelectorAll","classList","remove","querySelector","add","window","location","hash","likeList","Boolean","hostname","match","initialStateSearch","initialStateResult","initialStateRecipe","initialStateSetInfo","initialStateLikRecipe","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1d97eed.chunk.js","sourcesContent":["import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_RESULTS_PENDING,\r\n  REQUEST_RESULTS_SUCCESS,\r\n  REQUEST_RESULTS_FAILED,\r\n  REQUEST_RECIPE_PENDING,\r\n  REQUEST_RECIPE_SUCCESS,\r\n  REQUEST_RECIPE_FAILED,\r\n  SET_RECIPE_INFO,\r\n  SET_LIKE_RECIPE\r\n} from \"./constants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n//State variable for user input field\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\n\r\n//Making a AJAX request for all the recipes\r\nexport const requestResult = query => async dispatch => {\r\n  dispatch({ type: REQUEST_RESULTS_PENDING });\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `https://forkify-api.herokuapp.com/api/search?&q=${query}`\r\n    );\r\n    dispatch({ type: REQUEST_RESULTS_SUCCESS, payload: res.data.recipes });\r\n  } catch (error) {\r\n    dispatch({ type: REQUEST_RESULTS_FAILED, payload: error });\r\n  }\r\n};\r\n\r\n//Making a AJAX request for the direction of a recipe\r\nexport const requestRecipe = id => async dispatch => {\r\n  dispatch({ type: REQUEST_RECIPE_PENDING });\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `https://forkify-api.herokuapp.com/api/get?rId=${id}`\r\n    );\r\n    dispatch({ type: REQUEST_RECIPE_SUCCESS, payload: res.data.recipe });\r\n  } catch (error) {\r\n    dispatch({ type: REQUEST_RECIPE_FAILED, payload: error });\r\n  }\r\n};\r\n\r\n//To store all the recipe info into a state\r\nexport const setRecipeInfo = info => ({\r\n  type: SET_RECIPE_INFO,\r\n  payload: {\r\n    id: info.id,\r\n    title: info.title,\r\n    author: info.author,\r\n    img: info.img,\r\n    url: info.url,\r\n    ingredients: info.ingredients,\r\n    time: info.time,\r\n    servings: info.servings\r\n  }\r\n});\r\n\r\n//To store all the recipes that the user like\r\nexport const setLikedRecipe = recipe => ({\r\n  type: SET_LIKE_RECIPE,\r\n  payload: recipe\r\n});\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_RESULTS_PENDING = 'REQUEST_RESULTS_PENDING';\r\nexport const REQUEST_RESULTS_SUCCESS = 'REQUEST_RESULTS_SUCCESS';\r\nexport const REQUEST_RESULTS_FAILED = 'REQUEST_RESULTS_FAILED';\r\n\r\nexport const SET_RECIPE_INFO = 'SET_RECIPE_INFO';\r\nexport const SET_LIKE_RECIPE = 'SET_LIKE_RECIPE' ;\r\n\r\nexport const REQUEST_RECIPE_PENDING = 'REQUEST_RECIPES_PENDING';\r\nexport const REQUEST_RECIPE_SUCCESS = 'REQUEST_RECIPES_SUCCESS';\r\nexport const REQUEST_RECIPE_FAILED = 'REQUEST_RECIPES_FAILED';\r\n","import React from \"react\";\r\nimport { setSearchField, requestResult } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Search = function(props) {\r\n  const onSearchClick = event => {\r\n    event.preventDefault();\r\n    props.requestResult(props.searchField);\r\n  };\r\n  return (\r\n    <form className=\"search\" onSubmit={onSearchClick}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search__field\"\r\n        placeholder=\"Search over 1,000,000 recipes...\"\r\n        value={props.searchField}\r\n        onChange={event => props.setSearchField(event.target.value)}\r\n      />\r\n      <button className=\"btn search__btn\">\r\n        <svg className=\"search__icon\">\r\n          <use href=\"img/icons.svg#icon-magnifying-glass\"></use>\r\n        </svg>\r\n        <span>Search</span>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRecipes.searchField\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setSearchField, requestResult })(\r\n  Search\r\n);\r\n","import React from \"react\";\r\n\r\nconst LikeItem = function(props) {\r\n  return (\r\n    <li>\r\n      <a\r\n        className=\"likes__link\"\r\n        href={`#${props.item.id}`}\r\n        onClick={props.likeItemOnClick}\r\n      >\r\n        <figure className=\"likes__fig\">\r\n          <img src={props.item.img} alt={props.item.title} />\r\n        </figure>\r\n        <div className=\"likes__data\">\r\n          <h4 className=\"likes__name\">{props.item.title}</h4>\r\n          <p className=\"likes__author\">{props.item.author}</p>\r\n        </div>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default LikeItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LikeItem from \"./LikeItem\";\r\n\r\nconst LikeList = function(props) {\r\n  if (props.isLike) {\r\n    return (\r\n      <div className=\"likes\">\r\n        <div className=\"likes__field\">\r\n          <svg className=\"likes__icon\">\r\n            <use\r\n              href={`img/icons.svg#icon-heart${\r\n                props.isLike ? \"\" : \"-outlined\"\r\n              }`}\r\n            ></use>\r\n          </svg>\r\n        </div>\r\n        <div className=\"likes__panel\">\r\n          <ul className=\"likes__list\">\r\n            {props.likedRecipe.map(item => (\r\n              <LikeItem\r\n                item={item}\r\n                key={item.id}\r\n                likeItemOnClick={props.likeItemOnClick}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    likedRecipe: state.setLikedRecipe.likedRecipe\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(LikeList);\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport LikeList from \"./LikeList\";\r\n\r\nconst Header = function(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src=\"./img/logo.png\" alt=\"Logo\" className=\"header__logo\"></img>\r\n      <Search />\r\n      <LikeList isLike={props.isLike} likeItemOnClick={props.likeItemOnClick} />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst PageButton = function({ page, type, onPageClick }) {\r\n  return (\r\n    <button\r\n      className={`btn-inline results__btn--${type}`}\r\n      data-goto={`${type === \"prev\" ? page - 1 : page + 1}`}\r\n      onClick={onPageClick}\r\n    >\r\n      <svg className=\"search__icon\">\r\n        <use\r\n          href={`img/icons.svg#icon-triangle-${\r\n            type === \"prev\" ? \"left\" : \"right\"\r\n          }`}\r\n        ></use>\r\n      </svg>\r\n      <span>Page {`${type === \"prev\" ? page - 1 : page + 1}`}</span>\r\n    </button>\r\n  );\r\n};\r\nexport default PageButton;\r\n","import React from \"react\";\r\nimport Page from \"./PageButton\";\r\n\r\nconst ResultsPages = function({ page, numResult, resPerPage, onPageClick }) {\r\n  const pages = Math.ceil(numResult / resPerPage);\r\n\r\n  if (page === 1 && pages > 1) {\r\n    //Button to go to next page\r\n    return (\r\n      <div className=\"results__pages\">\r\n        <Page page={page} type={\"next\"} onPageClick={onPageClick} />\r\n      </div>\r\n    );\r\n  } else if (page < pages) {\r\n    //Both buttons\r\n    return (\r\n      <div className=\"results__pages\">\r\n        <Page page={page} type={\"next\"} onPageClick={onPageClick} />\r\n        <Page page={page} type={\"prev\"} onPageClick={onPageClick} />\r\n      </div>\r\n    );\r\n  } else if (page === pages && pages > 1) {\r\n    //Only button to go to the previous page\r\n    return (\r\n      <div className=\"results__pages\">\r\n        <Page page={page} type={\"prev\"} onPageClick={onPageClick} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ResultsPages;\r\n","import React from \"react\";\r\n\r\nexport const limitRecipeTitle = (title, limit = 17) => {\r\n  const newTitle = [];\r\n  if (title.length > limit) {\r\n    title.split(\" \").reduce((acc, cur) => {\r\n      if (acc + cur.length <= limit) {\r\n        newTitle.push(cur);\r\n      }\r\n      return acc + cur.length;\r\n    }, 0);\r\n    return `${newTitle.join(\" \")} ...`;\r\n  }\r\n  return title;\r\n};\r\n\r\nconst Result = function(props) {\r\n  return (\r\n    <li>\r\n      <a\r\n        className=\"results__link\"\r\n        href={`#${props.result.recipe_id}`}\r\n        onClick={props.recipeOnClick}\r\n      >\r\n        <figure className=\"results__fig\">\r\n          <img\r\n            src={`${props.result.image_url}`}\r\n            alt={`${limitRecipeTitle(props.result.title)}`}\r\n          />\r\n        </figure>\r\n        <div className=\"results__data\">\r\n          <h4 className=\"results__name\">{`${limitRecipeTitle(\r\n            props.result.title\r\n          )}`}</h4>\r\n          <p className=\"results__author\">{`${props.result.publisher}`}</p>\r\n        </div>\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Result from \"./Result\";\r\n\r\nconst ResultsList = function(props) {\r\n  const start = (props.page - 1) * props.resPerPage;\r\n  const end = props.page * props.resPerPage;\r\n\r\n  return (\r\n    <ul className=\"results__list\">\r\n      {props.searchResult.slice(start, end).map(result => {\r\n        return (\r\n          <Result\r\n            result={result}\r\n            key={result.recipe_id}\r\n            recipeOnClick={props.recipeOnClick}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ResultsList;\r\n","import React, { Component } from \"react\";\r\nimport ResultsPages from \"./ResultsPages\";\r\nimport ResultsList from \"./ResultsList\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Results extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      resPerPage: 10\r\n    };\r\n  }\r\n\r\n  onPageClick = event => {\r\n    this.setState({\r\n      currentPage: parseInt(event.target.closest(\".btn-inline\").dataset.goto)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.results.length) {\r\n      return (\r\n        <div className=\"results\">\r\n          <ResultsList\r\n            searchResult={this.props.results}\r\n            page={this.state.currentPage}\r\n            resPerPage={this.state.resPerPage}\r\n            recipeOnClick={this.props.recipeOnClick}\r\n          />\r\n          <ResultsPages\r\n            page={this.state.currentPage}\r\n            numResult={this.props.results.length}\r\n            resPerPage={this.state.resPerPage}\r\n            onPageClick={this.onPageClick}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.props.isPending) {\r\n      return (\r\n        <div className=\"loader\">\r\n          <svg>\r\n            <use href=\"img/icons.svg#icon-cw\"></use>\r\n          </svg>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h2 className=\"heading-2\">No Result</h2>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchField: state.searchRecipes.searchField,\r\n    results: state.requestResult.results,\r\n    isPending: state.requestResult.isPending,\r\n    error: state.requestResult.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Results);\r\n","import React, { Component } from \"react\";\r\nimport { setRecipeInfo, setLikedRecipe } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Fraction } from \"fractional\";\r\n\r\nclass Recipe extends Component {\r\n  recipeButtonClick = event => {\r\n    if (event.target.matches(\".btn-decrease, .btn-decrease *\")) {\r\n      if (this.props.servings > 1) {\r\n        this.updateServings(\"dec\");\r\n      }\r\n    } else if (event.target.matches(\".btn-increase, .btn-increase *\")) {\r\n      this.updateServings(\"inc\");\r\n    }\r\n  };\r\n\r\n  updateServings = type => {\r\n    let newServing, newIngredients;\r\n    //Update servings\r\n    newServing =\r\n      type === \"dec\" ? this.props.servings - 1 : this.props.servings + 1;\r\n    //Update Ingredients\r\n    newIngredients = this.props.ingredients.map(ingredient => {\r\n      ingredient.count *= newServing / this.props.servings;\r\n      return ingredient;\r\n    });\r\n    this.props.setRecipeInfo({\r\n      id: this.props.id,\r\n      title: this.props.title,\r\n      author: this.props.author,\r\n      img: this.props.img,\r\n      url: this.props.url,\r\n      ingredients: newIngredients,\r\n      time: this.props.time,\r\n      servings: newServing\r\n    });\r\n  };\r\n\r\n  createIngredient = ingredient => {\r\n    return (\r\n      <li className=\"recipe__item\" key={ingredient.id}>\r\n        <svg className=\"recipe__icon\">\r\n          <use href=\"img/icons.svg#icon-check\"></use>\r\n        </svg>\r\n        <div className=\"recipe__count\">\r\n          {this.formatCount(ingredient.count)}\r\n        </div>\r\n        <div className=\"recipe__ingredient\">\r\n          <span className=\"recipe__unit\">{ingredient.unit}</span>\r\n          {ingredient.ingredient}\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  formatCount = count => {\r\n    if (count) {\r\n      const newCount = Math.round(count * 10000) / 10000;\r\n      const [int, dec] = count\r\n        .toString()\r\n        .split(\".\")\r\n        .map(el => parseInt(el, 10));\r\n\r\n      if (!dec) return newCount;\r\n      if (int === 0) {\r\n        const fr = new Fraction(newCount);\r\n        return `${fr.numerator}/${fr.denominator}`;\r\n      } else {\r\n        const fr = new Fraction(newCount - int);\r\n        return `${int} ${fr.numerator}/${fr.denominator}`;\r\n      }\r\n    }\r\n    return \"?\";\r\n  };\r\n\r\n  render() {\r\n    if (this.props.id && this.props.recipe.length !== 0) {\r\n      return (\r\n        <div className=\"recipe\" onClick={this.recipeButtonClick}>\r\n          <figure className=\"recipe__fig\">\r\n            <img\r\n              src={this.props.img}\r\n              alt={this.props.title}\r\n              className=\"recipe__img\"\r\n            />\r\n            <h1 className=\"recipe__title\">\r\n              <span>{this.props.title}</span>\r\n            </h1>\r\n          </figure>\r\n\r\n          <div className=\"recipe__details\">\r\n            <div className=\"recipe__info\">\r\n              <svg className=\"recipe__info-icon\">\r\n                <use href=\"img/icons.svg#icon-stopwatch\"></use>\r\n              </svg>\r\n              <span className=\"recipe__info-data recipe__info-data--minutes\">\r\n                {this.props.time}\r\n              </span>\r\n              <span className=\"recipe__info-text\"> minutes</span>\r\n            </div>\r\n            <div className=\"recipe__info\">\r\n              <svg className=\"recipe__info-icon\">\r\n                <use href=\"img/icons.svg#icon-man\"></use>\r\n              </svg>\r\n              <span className=\"recipe__info-data recipe__info-data--people\">\r\n                {this.props.servings}\r\n              </span>\r\n              <span className=\"recipe__info-text\"> servings</span>\r\n\r\n              <div className=\"recipe__info-buttons\">\r\n                <button className=\"btn-tiny btn-decrease\">\r\n                  <svg>\r\n                    <use href=\"img/icons.svg#icon-circle-with-minus\"></use>\r\n                  </svg>\r\n                </button>\r\n                <button className=\"btn-tiny btn-increase\">\r\n                  <svg>\r\n                    <use href=\"img/icons.svg#icon-circle-with-plus\"></use>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button className=\"recipe__love\" onClick={this.props.likeButton}>\r\n              <svg className=\"header__likes\">\r\n                <use\r\n                  href={`img/icons.svg#icon-heart${\r\n                    this.props.liked[0] ? \"\" : \"-outlined\"\r\n                  }`}\r\n                ></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"recipe__ingredients\">\r\n            <ul className=\"recipe__ingredient-list\">\r\n              {this.props.ingredients.map(el => this.createIngredient(el))}\r\n            </ul>\r\n\r\n            <button\r\n              className=\"btn-small recipe__btn--add\"\r\n              onClick={this.props.addToListButton}\r\n            >\r\n              <svg className=\"search__icon\">\r\n                <use href=\"img/icons.svg#icon-shopping-cart\"></use>\r\n              </svg>\r\n              <span>Add to shopping list</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"recipe__directions\">\r\n            <h2 className=\"heading-2\">How to cook it</h2>\r\n            <p className=\"recipe__directions-text\">\r\n              This recipe was carefully designed and tested by\r\n              <span className=\"recipe__by\">{this.props.author}</span>. Please\r\n              check out directions at their website.\r\n            </p>\r\n            <a\r\n              className=\"btn-small recipe__btn\"\r\n              href={this.props.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <span>Directions</span>\r\n              <svg className=\"search__icon\">\r\n                <use href=\"img/icons.svg#icon-triangle-right\"></use>\r\n              </svg>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div className=\"recipe heading-2\">Nothing</div>;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    recipe: state.requestRecipe.recipe,\r\n    id: state.setRecipeInfo.id,\r\n    title: state.setRecipeInfo.title,\r\n    author: state.setRecipeInfo.author,\r\n    img: state.setRecipeInfo.img,\r\n    url: state.setRecipeInfo.url,\r\n    ingredients: state.setRecipeInfo.ingredients,\r\n    time: state.setRecipeInfo.time,\r\n    servings: state.setRecipeInfo.servings,\r\n    likedRecipe: state.setLikedRecipe.likedRecipe\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setRecipeInfo, setLikedRecipe })(\r\n  Recipe\r\n);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ShoppingItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: this.props.ingredient.count,\r\n      delete: false\r\n    };\r\n  }\r\n\r\n  countUpdate = event => {\r\n    let newCount = event.target.value;\r\n\r\n    newCount =\r\n      newCount > this.props.ingredient.count\r\n        ? event.target.value\r\n        : this.props.ingredient.count;\r\n\r\n    this.setState({ count: newCount });\r\n  };\r\n\r\n  deleteIng = event => {\r\n    this.setState({ delete: true });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.delete) {\r\n      return (\r\n        <li className=\"shopping__item\" data-item-id={this.props.ingredient.id}>\r\n          <div className=\"shopping__count\">\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.count}\r\n              step={this.props.ingredient.count}\r\n              className=\"shopping__count-value\"\r\n              onChange={this.countUpdate}\r\n            />\r\n            <p>{this.props.ingredient.unit}</p>\r\n          </div>\r\n          <p className=\"shopping__description\">\r\n            {this.props.ingredient.ingredient}\r\n          </p>\r\n          <button\r\n            className=\"shopping__delete btn-tiny\"\r\n            onClick={this.deleteIng}\r\n          >\r\n            <svg>\r\n              <use href=\"img/icons.svg#icon-circle-with-cross\"></use>\r\n            </svg>\r\n          </button>\r\n        </li>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n}\r\nexport default ShoppingItems;\r\n","import React from \"react\";\r\nimport ShoppingItems from \"./ShoppingItems\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Shopping = function({ shoppingList }) {\r\n  if (shoppingList.length > 0) {\r\n    return (\r\n      <div className=\"shopping\">\r\n        <h2 className=\"heading-2\">My Shopping List</h2>\r\n        <ul className=\"shopping__list\">\r\n          {shoppingList.map(ingredient => {\r\n            return (\r\n              <ShoppingItems ingredient={ingredient} key={ingredient.id} />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"shopping\">\r\n        <h2 className=\"heading-2\">My Shopping List</h2>\r\n        <ul className=\"shopping__list\"></ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.setRecipeInfo.ingredients\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Shopping);\r\n","import React from \"react\";\r\n\r\nconst CopyRight = function() {\r\n  return (\r\n    <div className=\"copyright\">\r\n      &copy; by Wei Chieh Lo. Powered by\r\n      <a\r\n        href=\"http://food2fork.com\"\r\n        target=\"_blank\"\r\n        className=\"link\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Food2Fork.com\r\n      </a>\r\n      .\r\n    </div>\r\n  );\r\n};\r\nexport default CopyRight;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"../components/Header\";\nimport Results from \"../components/Results\";\nimport Recipe from \"../components/Recipe\";\nimport Shopping from \"../components/Shopping\";\nimport CopyRight from \"../components/CopyRight\";\nimport { requestRecipe, setRecipeInfo, setLikedRecipe } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [], //Shopping list\n      isLike: 0\n    };\n  }\n  async componentDidMount() {\n    //Obtain the hash value of the webpage and re-render recipe component base on it\n    const id = window.location.hash.slice(1);\n    if (id) {\n      await this.props.requestRecipe(id);\n\n      this.props.setRecipeInfo({\n        id: id,\n        title: this.props.recipe.title,\n        author: this.props.recipe.publisher,\n        img: this.props.recipe.image_url,\n        url: this.props.recipe.source_url,\n        ingredients: this.parseIngredients(),\n        time: this.calcTime(this.props.recipe.ingredients),\n        servings: 4\n      });\n    }\n  }\n\n  //Calculate cooking time\n  calcTime = ingredients => {\n    //Assuming 15 mins per 3 ingredients\n    const numIng = ingredients.length;\n    const periods = Math.ceil(numIng / 3);\n    return periods * 15;\n  };\n\n  //Parse API result into array and seperated by unit, count, and the name of ingredient\n  parseIngredients = () => {\n    const unitsLong = [\n      \"tablespoons\",\n      \"tablespoon\",\n      \"ounces\",\n      \"ounce\",\n      \"oz.\",\n      \"teaspoons\",\n      \"teaspoon\",\n      \"cups\",\n      \"pounds\"\n    ];\n    const unitsShort = [\n      \"tbsp\",\n      \"tbsp\",\n      \"oz\",\n      \"oz\",\n      \"oz\",\n      \"tsp\",\n      \"tsp\",\n      \"cup\",\n      \"pound\"\n    ];\n    const units = [...unitsShort, \"kg\", \"g\"];\n\n    const newIngredients = this.props.recipe.ingredients.map(el => {\n      // Uniform unit\n      let ingredient = el.toLowerCase();\n      unitsLong.forEach((unit, i) => {\n        ingredient = ingredient.replace(unit, unitsShort[i]);\n      });\n\n      //Remove parentheses\n      ingredient = ingredient.replace(/ *\\([^)]*\\) */g, \" \").replace(\",\", \"\");\n\n      //Parse ingedients into ocunt, unit, and ingredient\n\n      const arrIng = ingredient.split(\" \");\n      const unitIndex = arrIng.findIndex(el2 => units.includes(el2));\n\n      let objIng;\n\n      if (unitIndex > -1) {\n        //There is a unit\n        const arrCount = arrIng.slice(0, unitIndex);\n        let count;\n        if (arrCount.length === 1) {\n          // count = eval(arrIng[0].replace('-', '+')) //EVAL is not save to use, thus change it to Function\n          try {\n            count = new Function(`return (${arrIng[0].replace(\"-\", \"+\")})`)();\n          } catch {\n            count = 1;\n          }\n        } else {\n          // count = eval(arrIng.slice(0,unitIndex).join('+'))\n          try {\n            count = new Function(\n              `return (${arrIng.slice(0, unitIndex).join(\"+\")})`\n            )();\n          } catch {\n            count = 1;\n          }\n        }\n        objIng = {\n          count,\n          unit: arrIng[unitIndex],\n          ingredient: arrIng.slice(unitIndex + 1).join(\" \"),\n          id: uniqid()\n        };\n      } else if (parseInt(arrIng[0], 10)) {\n        //There is no unit, but 1st element is a number\n        objIng = {\n          count: parseInt(arrIng[0], 10),\n          unit: \"\",\n          ingredient: arrIng.slice(1).join(\" \"),\n          id: uniqid()\n        };\n      } else if (unitIndex === -1) {\n        //There is no unit and no number in first position\n        objIng = {\n          count: 1,\n          unit: \"\",\n          // ingredient: ingredient\n          ingredient,\n          id: uniqid()\n        };\n      }\n\n      return objIng;\n    });\n    return newIngredients;\n  };\n\n  //When one of the recipes is click in the result, it would set the value in redux and re-render result component\n  recipeOnClick = async event => {\n    const id = event.target\n      .closest(\".results__link\")\n      .getAttribute(\"href\")\n      .slice(1);\n    this.highlightSelected(id);\n    await this.props.requestRecipe(id);\n    this.props.setRecipeInfo({\n      id: id,\n      title: this.props.recipe.title,\n      author: this.props.recipe.publisher,\n      img: this.props.recipe.image_url,\n      url: this.props.recipe.source_url,\n      ingredients: this.parseIngredients(),\n      time: this.calcTime(this.props.recipe.ingredients),\n      servings: 4\n    });\n  };\n  //Set the shopping list value by adding the new one to the exisiting one\n  addToListButton = () => {\n    this.setState({\n      list: [...new Set([...this.state.list, ...this.props.ingredients])]\n    });\n  };\n\n  //Use to determine is the recipe ID exists in the likelist already\n  liked = (id, likedRecipe) => {\n    let result = [false, -1];\n    likedRecipe.forEach((recipe, idx) => {\n      if (id === recipe.id) {\n        result = [true, idx];\n      }\n    });\n    if (result[0]) {\n      return result;\n    } else {\n      return [false, -1];\n    }\n  };\n\n  //When Likebutton is pressed, update the redux likeRecipe variable\n  likeButton = () => {\n    let currentLiked = this.props.likedRecipe;\n    const [condition, idx] = this.liked(this.props.id, this.props.likedRecipe);\n\n    if (condition) {\n      currentLiked.splice(idx, 1);\n      this.props.setLikedRecipe(currentLiked);\n    } else {\n      currentLiked.push({\n        id: this.props.id,\n        img: this.props.img,\n        title: this.props.title,\n        author: this.props.author\n      });\n      this.props.setLikedRecipe(currentLiked);\n    }\n    this.props.likedRecipe.length > 0\n      ? this.setState({ isLike: this.state.isLike + 1 })\n      : this.setState({ isLike: 0 });\n  };\n\n  //In the like list, when a recipe is pressed, it will read the url and re render the result component\n  likeItemOnClick = async event => {\n    const id = event.target\n      .closest(\".likes__link\")\n      .getAttribute(\"href\")\n      .slice(1);\n    this.highlightSelected(id);\n    await this.props.requestRecipe(id);\n    this.props.setRecipeInfo({\n      id: id,\n      title: this.props.recipe.title,\n      author: this.props.recipe.publisher,\n      img: this.props.recipe.image_url,\n      url: this.props.recipe.source_url,\n      ingredients: this.parseIngredients(),\n      time: this.calcTime(this.props.recipe.ingredients),\n      servings: 4\n    });\n  };\n\n  //Using query selector, remove all active css and add the active css only to the one that is active\n  highlightSelected = id => {\n    const resultArr = Array.from(document.querySelectorAll(\".results__link\"));\n    resultArr.forEach(el => {\n      el.classList.remove(\"results__link--active\");\n    });\n    document\n      .querySelector(`.results__link[href=\"#${id}\"]`)\n      .classList.add(\"results__link--active\");\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header\n          isLike={this.state.isLike}\n          likeList={this.state.likeList}\n          likeItemOnClick={this.likeItemOnClick}\n        />\n        <Results recipeOnClick={this.recipeOnClick} />\n        <Recipe\n          addToListButton={this.addToListButton}\n          likeButton={this.likeButton}\n          liked={this.liked(this.props.id, this.props.likedRecipe)}\n        />\n        <Shopping shoppingList={this.state.list} />\n        <CopyRight />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipe: state.requestRecipe.recipe,\n    id: state.setRecipeInfo.id,\n    title: state.setRecipeInfo.title,\n    author: state.setRecipeInfo.author,\n    img: state.setRecipeInfo.img,\n    url: state.setRecipeInfo.url,\n    ingredients: state.setRecipeInfo.ingredients,\n    likedRecipe: state.setLikedRecipe.likedRecipe\n  };\n};\nexport default connect(mapStateToProps, {\n  requestRecipe,\n  setRecipeInfo,\n  setLikedRecipe\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_RESULTS_PENDING,\r\n  REQUEST_RESULTS_SUCCESS,\r\n  REQUEST_RESULTS_FAILED,\r\n  SET_RECIPE_INFO,\r\n  REQUEST_RECIPE_PENDING,\r\n  REQUEST_RECIPE_SUCCESS,\r\n  REQUEST_RECIPE_FAILED,\r\n  SET_LIKE_RECIPE\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\"\r\n};\r\n\r\n//Reducer for the user input field\r\nexport const searchRecipes = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateResult = {\r\n  isPending: false,\r\n  results: [],\r\n  error: \"\"\r\n};\r\n\r\n//Reducer for retrieving all eecipes\r\nexport const requestResult = (state = initialStateResult, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_RESULTS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_RESULTS_SUCCESS:\r\n      return { ...state, results: action.payload, isPending: false };\r\n    case REQUEST_RESULTS_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRecipe = {\r\n  isPending: false,\r\n  recipe: [],\r\n  error: \"\"\r\n};\r\n\r\n//Reducer for the Recipe cooking direction\r\nexport const requestRecipe = (state = initialStateRecipe, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_RECIPE_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_RECIPE_SUCCESS:\r\n      return { ...state, recipe: action.payload, isPending: false };\r\n    case REQUEST_RECIPE_FAILED:\r\n      return { ...state, error: action.payload, isPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateSetInfo = {\r\n  id: \"\",\r\n  title: \"\",\r\n  author: \"\",\r\n  img: \"\",\r\n  url: \"\",\r\n  ingredients: \"\",\r\n  time: \"\",\r\n  servings: 4\r\n};\r\n\r\n//Reducer for to set the recipe info\r\nexport const setRecipeInfo = (state = initialStateSetInfo, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_RECIPE_INFO:\r\n      return {\r\n        ...state,\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        author: action.payload.author,\r\n        img: action.payload.img,\r\n        url: action.payload.url,\r\n        ingredients: action.payload.ingredients,\r\n        time: action.payload.time,\r\n        servings: action.payload.servings\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateLikRecipe = {\r\n  likedRecipe: []\r\n};\r\n\r\n//Reducer for all liked recipe\r\nexport const setLikedRecipe = (state = initialStateLikRecipe, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_LIKE_RECIPE:\r\n      return { ...state, likedRecipe: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {\r\n  searchRecipes,\r\n  requestResult,\r\n  requestRecipe,\r\n  setRecipeInfo,\r\n  setLikedRecipe\r\n} from \"./reducers\";\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({\r\n  searchRecipes,\r\n  requestResult,\r\n  requestRecipe,\r\n  setRecipeInfo,\r\n  setLikedRecipe\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}